@page
@model RegisterModel
@{
    TempData["Titile"] = "Register";
    var keys = ModelState.Keys;
}

@section Styles {
    <link rel="stylesheet" href="~/lib/country-select-js/css/countrySelect.css">
    <link rel="stylesheet" href="~/lib/intl-tel-input/css/intlTelInput.css">
}

<div class="row">
    <div class=" d-flex justify-content-center">
        <div class="col-6 p-4 border" style="background-color: rgb(243, 209, 241); border-radius:0.8rem">

            <div class=" visually-hidden">
                <span id="tabIndex">@Model.Initialtab</span>
            </div>

            <form method="post" id="frmRegister" asp-page="/Account/Register" asp-page-handler="Register"
                asp-route-tabindex="0">

                <!-- 'Tab-1' user register  --->
                <div class="tab">

                    <div class="mb-3 row">
                        <div class="col-3">
                            <label asp-for="Input.Email" class=" form-label"></label>
                        </div>
                        <div class="col">
                            <input type="text" asp-for="Input.Email" class=" form-control">
                            <span asp-validation-for="Input.Email" class=" text-danger"></span>
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <div class="col-3">
                            <label id="" asp-for="Input.Password" class=" form-label"></label>
                        </div>
                        <div class="col">
                            <input type="password" asp-for="Input.Password" autocomplete="on" class=" form-control">
                            @if (keys.Any(x => x == "Input.Password"))
                            {
                                var errors = ModelState["Input.Password"]!.Errors.Select(x => x.ErrorMessage).ToList();
                                foreach (var error in ModelState["Input.Password"]!.Errors)
                                {
                                    <span class=" text-danger">@error.ErrorMessage</span>
                                }
                            }
                            else
                            {
                                <span asp-validation-for="Input.Password" class=" text-danger"></span>
                            }
                        </div>
                    </div>

                    <div class="mb-5 row">
                        <div class="col-3">
                            <label asp-for="Input.ConfirmPassword" class=" form-label"></label>
                        </div>
                        <div class="col">
                            <input type="password" asp-for="Input.ConfirmPassword" autocomplete="on"
                                class=" form-control">
                            <span asp-validation-for="Input.ConfirmPassword" class=" text-danger"></span>
                        </div>
                    </div>

                </div>
                <!-- end --->

            </form>

            <form method="post" id="frmUpdate" asp-page="/Account/Register" asp-page-handler="Update"
                asp-route-tabindex="0">
                <div class=" visually-hidden">
                    <input type="text" asp-for="CurrentUser" class=" form-control">
                </div>

                <!-- 'Tab-2' update user details --->
                <div class="tab">
                    <div class="mb-3 row">
                        <div class="col-3">
                            <label asp-for="Profile.FirstName"></label>
                        </div>
                        <div class="col">
                            <input name="Profile.FirstName" type="text" asp-for="Profile.FirstName"
                                class=" form-control">
                            <span asp-validation-for="Profile.FirstName" class=" text-danger"></span>
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <div class="col-3">
                            <label asp-for="Profile.LastName"></label>
                        </div>
                        <div class="col">
                            <input type="text" asp-for="Profile.LastName" class=" form-control">
                            <span asp-validation-for="Profile.LastName" class=" text-danger"></span>
                        </div>
                    </div>

                    <div class="mb-5 row">
                        <div class="col-3">
                            <span class=" form-label">Gender</span>
                        </div>
                        <div class="col">
                            <div class="d-flex  justify-content-around">
                                @foreach (var gender in Enum.GetValues(typeof(Gender)))
                                {
                                    <div class="form-check">
                                        <input asp-for="Profile.Gender" class="form-check-input me-1" type="radio"
                                            value="@gender" id="Profile_Gender_@gender"
                                            checked="@((gender as Gender?) == Model.Profile.Gender)">
                                        <span asp-for="Profile_Gender" class="form-check-label">@gender</span>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <!-- end --->

                <!-- 'Tab-3' update user's contact --->
                <div class="tab">
                    <div class="mb-3 row">
                        <div class="col-3">
                            <label asp-for="Profile.Phone" class=" form-label"></label>
                        </div>
                        <div class="col">
                            <input id="phone" name="phone" type="tel" class=" form-control">
                            <input asp-for="Profile.Phone" class=" form-control visually-hidden">
                            <input asp-for="Profile.PhoneCode" class=" form-control visually-hidden">
                            <span id="Profile_Phone_Error" asp-validation-for="Profile.Phone"
                                class=" text-danger"></span>
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <div class="col-3">
                            <label asp-for="Profile.Country" class=" form-label"></label>
                        </div>
                        <div class="col">
                            <input id="country_select" type="text" class=" form-control">
                            <input type="text" asp-for="Profile.Country" class=" form-control visually-hidden">
                            <input type="text" asp-for="Profile.CountryCode" class=" form-control visually-hidden">
                            <span asp-validation-for="Profile.Country" class=" text-danger"></span>
                        </div>
                    </div>

                    <div class="mb-5 row">
                        <div class="col-3">
                            <label asp-for="Profile.State" class=" form-label"></label>
                        </div>
                        <div class="col">
                            <input name="Profile.State" type="text" asp-for="Profile.State" class=" form-control">
                            <span asp-validation-for="Profile.State" class=" text-danger"></span>
                        </div>
                    </div>
                </div>
                <!-- end --->

            </form>

            <form method="post" id="frmUpload" asp-page="/Account/Register" asp-page-handler="Upload"
                asp-route-tabindex="0" enctype="multipart/form-data">

                <!-- 'Tab-4' update profile image --->
                <div class="tab">
                    <div class="mb-3 row">
                        <div class="col-5">
                            <label asp-for="Profile.ProfileImage" class=" mb-3 form-label"></label>
                            <input type="file" asp-for="Profile.ProfileImage" class="form-control-file">
                            <span asp-validation-for="Profile.ProfileImage" class=" text-danger"></span>
                        </div>
                        <div class="col">
                            <div class="text-center">
                                <img id="image_preview" src="~/images/avatar_default.png"
                                    class="rounded mb-5 img-thumbnail" alt="profile image">
                            </div>
                        </div>
                    </div>
                </div>
                <!-- end --->

            </form>

            <!-- form buttons --->
            <div class="mb-3 row">
                <div class="col-3">
                </div>
                <div class="col">
                    <div class="d-flex justify-content-end">
                        <button class="btn btn-info fs-6 px-5 me-2" id="prevBtn"
                            onclick="nextPrev(-1)">Previous</button>
                        <button id="nextBtn" class="btn btn-danger fs-6 px-5" onclick="nextPrev(1)">Next</button>
                    </div>
                </div>
            </div>
            <!-- end --->

            <!-- tab's indicator --->
            <div class="mb-0 mt-5 row">
                <div class="d-flex justify-content-center">
                    <span class="step"></span>
                    <span class="step"></span>
                    <span class="step"></span>
                    <span class="step"></span>
                </div>
            </div>
            <!-- end --->

        </div>
    </div>
</div>

@section Scripts {
    <partial name="../Shared/_ValidationScriptsPartial.cshtml"></partial>
    <script src="~/lib/country-select-js/js/countrySelect.min.js"></script>
    <script src="~/lib/intl-tel-input/js/intlTelInput.min.js"></script>
    <script src="~/lib/intl-tel-input/js/utils.js"></script>

    <script type="text/javascript">
        let currentTab = 0;

        const setIdForCountry = () => {
            let element = document.getElementsByClassName('iti__search-input');
            element.attr('id', 'country_select_input');
            element.attr('name', 'country_select_input');
        }

        const showTab = (n) => {
            const tabElement = document.getElementsByClassName('tab');
            tabElement[n].style.display = "block";

            if (n == 0) {
                document.getElementById('prevBtn').style.display = "none";
            } else {
                document.getElementById('prevBtn').style.display = "inline";
            }

            if (n == (tabElement.length - 1)) {
                document.getElementById('nextBtn').innerHTML = "Submit";
            } else {
                document.getElementById('nextBtn').innerHTML = "Next";
            }

            fixStepIndicator(n)
        }

        // jquery form validation
        const formValidation = () => {
            $('#frmRegister').validate();
            return $('#frmRegister').valid();
        }

        const nextPrev = (n) => {
            const tabElement = document.getElementsByClassName('tab');
            const validationResult = formValidation();

            if (n == 1 && !validationResult) return false;

            tabElement[currentTab].style.display = "none";

            const forwardTab = currentTab;
            currentTab += n;

            if (currentTab == 1 && forwardTab < currentTab) {
                getFormActionUpdate('frmRegister');
                return false;
            }

            // this is only set false password to fiels on backward move
            if (forwardTab > currentTab && currentTab == 0) {
                const email = document.getElementById('Input_Email').value;

                if (email != '') {
                    document.getElementById('Input_Password').value = "########";
                    document.getElementById('Input_ConfirmPassword').value = "########";
                }

                return false;
            }

            if (currentTab == (tabElement.length - 1)) {
                getFormActionUpdate('frmUpdate');
                return false;
            }

            if (currentTab >= tabElement.length) {
                getFormActionUpdate('frmUpload');
                return false;
            }

            showTab(currentTab);
        }

        const getFormActionUpdate = (formName) => {
            const form = document.getElementById(formName);
            let action = form.getAttribute('action');
            action = action.replace('tabindex=0', `tabindex=${currentTab}`);
            form.setAttribute('action', action);

            form.submit();
        }

        const fixStepIndicator = (n) => {
            const stepElement = document.getElementsByClassName('step');

            for (let i = 0; i < stepElement.length; i++) {
                stepElement[i].className = stepElement[i].className.replace(' active', '');
            }

            document.getElementById('tabIndex').value = currentTab;
            stepElement[n].className += " active";
        }

        // phone number format and validation
        const input = document.querySelector("#phone");
        const iti = window.intlTelInput(input, {
            initialCountry: "auto",
            nationalMode: true,
            autoInsertDialCode: true,
            showSelectedDialCode: false,
            showFlags: true,
            placeholderNumberType: "MOBILE",
            geoIpLookup: callback => {
                fetch("https://ipapi.co/json")
                    .then(res => res.json())
                    .then(data => callback(data.country_code))
                    .catch(() => callback("np"));
            },
            customPlaceholder: (selectedCountryPlaceholder, selectedCountryData) => {
                return "+" + selectedCountryData.dialCode + " " + selectedCountryPlaceholder;
            },
            utilsScript: "~/lib/intl-tel-input/js/utils.js"
        });

        // set number for example
        //iti.setNumber("+9779842382525");

        input.addEventListener('focusout', () => {
            const isValid = iti.isValidNumber();

            if (isValid == true) {
                let number = iti.getNumber();
                const countryData = iti.getSelectedCountryData();
                number = number.replace(`+${countryData.dialCode}`, '');

                document.getElementById('Profile_Phone').setAttribute('value', number);
                document.getElementById('Profile_PhoneCode').setAttribute('value', countryData.dialCode);

            }
            else {
                const error = iti.getValidationError();
                if (error == intlTelInputUtils.validationError.TOO_SHORT) {
                    document.getElementById('Profile_Phone_Error').setAttribute('value', 'Number is too short');
                }
            }
        });
        // phone end

        // Profile Image Preview
        document.getElementById('Profile_ProfileImage').addEventListener('change', (e) => {
            const image_preview = document.getElementById('image_preview');

            const file = e.target.files[0];
            const reader = new FileReader();

            reader.onload = (e) => {
                image_preview.src = e.target.result;
            };

            reader.readAsDataURL(file);
        });
        // end

        $(document).ready(function () {
            const index = document.getElementById('tabIndex').innerHTML;
            currentTab = parseInt(index);

            showTab(currentTab);

            let nameTrim = (cName) => {
                let start = cName.indexOf('(');
                let end = cName.length;

                let omit = cName.substring(start - 1, end);
                let countryInput = cName.replace(omit, '');

                return countryInput;
            }


            // country start
            $('#country_select').countrySelect({
                defaultCountry: "np",

            });

            const countryData = $("#country_select").countrySelect("getSelectedCountryData");

            const cName = nameTrim(countryData.name);

            $('#Profile_Country').val(cName);
            $('#Profile_CountryCode').val(countryData.iso2);

            $('#country_select').change(function () {
                const countryData = $("#country_select").countrySelect("getSelectedCountryData");
                const cName = nameTrim(countryData.name);

                $('#Profile_Country').val(cName);
                $('#Profile_CountryCode').val(countryData.iso2);
            });


            // end
        });
    </script>
}
